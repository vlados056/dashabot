from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters import Command
from aiogram import F
import asyncio
from pymongo import MongoClient
import datetime
import time
import hmac
import hashlib
import json
from aiohttp import web

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
API_TOKEN = "7643886458:AAGr6E4H3HlkkU7jSZncXUGP8e_t-O04RNc"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö MongoDB
uri = "mongodb+srv://mvstarcorp:UFnERtzkd9fwvqzm@cluster0.ihw7m.mongodb.net/?retryWrites=true&w=majority&tlsAllowInvalidCertificates=true"
client = MongoClient(uri)
database = client.get_database("Yoga_bot")
clients_collection = database.get_collection("clients")

# ID –∫–∞–Ω–∞–ª–∞
CHANNEL_ID = "2266785442"

# –°—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
IMAGES = {
    "main": "https://imgur.com/q7Fgkhh",
    "group_practice": "https://imgur.com/5WWAIIc",
    "individual_practice": "https://imgur.com/EAXcUvg",
    "trial_practice": "https://imgur.com/ls7d2Ua",
    "results": "https://imgur.com/Rd4o7X4",
    "feedback": "https://imgur.com/HuPLLJ2",
    "tariff": "https://imgur.com/1PU75Nz",
}

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –æ—Ç–∑—ã–≤–æ–≤
ADDITIONAL_PHOTOS = [
    "https://imgur.com/Gx6JnPF",
    "https://imgur.com/yTU7d3w",
    "https://imgur.com/kTfWNM3",
    "https://imgur.com/9kQ7axR",
    "https://imgur.com/JrYfCgH"
]

# –ú–µ–Ω—é –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –æ—Ç–∑—ã–≤–æ–≤
def results_menu_markup():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ù–ê–ó–ê–î", callback_data="main_menu")],
        [InlineKeyboardButton(text="–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ", callback_data="main_menu")]
    ])

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ì–†–£–ü–ü–û–í–´–ï –ü–†–ê–ö–¢–ò–ö–ò", callback_data="group_practice")],
        [InlineKeyboardButton(text="–ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–´–ï –ü–†–ê–ö–¢–ò–ö–ò", callback_data="individual_practice")],
        [InlineKeyboardButton(text="–ü–†–û–ë–ù–ê–Ø –ü–†–ê–ö–¢–ò–ö–ê", callback_data="trial_practice")],
        [InlineKeyboardButton(text="–†–ï–ó–£–õ–¨–¢–ê–¢–´ –ò –û–¢–ó–´–í–´", callback_data="results")],
        [InlineKeyboardButton(text="–û–ë–†–ê–¢–ù–ê–Ø –°–í–Ø–ó–¨", callback_data="feedback")]
    ])

# –§—É–Ω–∫—Ü–∏—è –∑–∞–Ω–µ—Å–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def add_client_to_db(user_id, user_name, subscription_status):
    if not clients_collection.find_one({'user_id': user_id}):
        clients_collection.insert_one({
            'user_id': user_id,
            'user_name': user_name,
            'subscription_status': subscription_status,
            'subscription_end_date': None,
            'last_reminder': None,
            'date_auth': datetime.datetime.now(datetime.UTC)
        })

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–∫—É–ø–∫–∏
def process_purchase(client_id, subscription_duration):
    end_date = datetime.datetime.now(datetime.UTC) + datetime.timedelta(days=subscription_duration)
    clients_collection.update_one(
        {'user_id': client_id},
        {'$set': {'subscription_status': 'subscribed', 'subscription_end_date': end_date}}
    )
    add_user_to_channel(client_id)

# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª
async def add_user_to_channel(client_id):
    try:
        await bot.add_chat_members(chat_id=CHANNEL_ID, user_id=client_id)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª: {e}")

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
def check_subscriptions():
    for client in clients_collection.find():
        if client['subscription_status'] == 'subscribed':
            end_date = client['subscription_end_date']
            if end_date <= datetime.datetime.now(datetime.UTC):
                clients_collection.update_one(
                    {'user_id': client['user_id']},
                    {'$set': {'subscription_status': 'no_subscription', 'subscription_end_date': None}}
                )
                send_message(client['user_id'], "–ü—Ä–∏–≤–µ—Ç! üòä\n–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å, –∏ –¥–æ—Å—Ç—É–ø –∫ –Ω–∞—à–∏–º —Ñ—É–Ω–∫—Ü–∏—è–º –≤—Ä–µ–º–µ–Ω–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω.\n–ù–æ —ç—Ç–æ –ª–µ–≥–∫–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å! –ü—Ä–æ–¥–ª–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å –∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ª—É—á—à–µ.\n\n–ï—Å–ª–∏ —É —Ç–µ–±—è –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –ø–∏—à–∏ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è ‚Äî –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏! üòä", main_menu())
                remove_user_from_channel(client['user_id'])
            elif end_date <= datetime.datetime.now(datetime.UTC) + datetime.timedelta(days=1):
                send_message(client['user_id'], "–ü—Ä–∏–≤–µ—Ç! üòä\n–ù–∞–ø–æ–º–∏–Ω–∞—é, —á—Ç–æ –∑–∞–≤—Ç—Ä–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —Å—Ä–æ–∫ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏. –ß—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º, –ø—Ä–æ–¥–ª–∏—Ç–µ –µ—ë –∑–∞—Ä–∞–Ω–µ–µ!\n\n–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–∏—à–∏ –º–Ω–µ ‚Äî –≤—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å!", main_menu())

# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–∞–Ω–∞–ª–∞
async def remove_user_from_channel(client_id):
    try:
        await bot.kick_chat_member(chat_id=CHANNEL_ID, user_id=client_id)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–∞–Ω–∞–ª–∞: {e}")

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
async def send_reminder(user_id):
    await send_message(user_id, "–ü—Ä–∏–≤–µ—Ç! üòä\n–Ø –∑–∞–º–µ—Ç–∏–ª–∞, —á—Ç–æ –≤—ã –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∏—Å—å –ø—Ä–∞–∫—Ç–∏–∫–∞–º–∏, –Ω–æ –µ—â—ë –Ω–µ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É. –ï—Å–ª–∏ —É –≤–∞—Å –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è @dariakobrina ‚Äî —è —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–º–æ–≥—É!\n\n–ù–µ –∑–∞–±—É–¥—å—Ç–µ, —á—Ç–æ –ø–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫:\n‚ú® –ü—Ä–∞–∫—Ç–∏–∫–∞–º FYSM –π–æ–≥–∏ –≤ –ø—Ä—è–º–æ–º —ç—Ñ–∏—Ä–µ,\n‚ú® –ö –∑–∞–ø–∏—Å—è–º –ø—Ä–∞–∫—Ç–∏–∫ - –∑–∞–Ω–∏–º–∞–π—Å—è –≤ –ª—é–±–æ–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è,\n‚ú® –ö –≥—Ä—É–ø–ø–µ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –∏ –∫—Ç–æ –≤—Å–µ–≥–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∏—Ç –µ—Å–ª–∏ –ª–µ–Ω—å –≤—Å—Ç–∞–≤–∞—Ç—å –Ω–∞ –∫–æ–≤—Ä–∏–∫.\n\n–ù–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π—Ç–µ —Å–≤–æ—ë –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –ø–æ—Ç–æ–º, —Å–¥–µ–ª–∞–π—Ç–µ –≥–ª—É–±–æ–∫–∏–π –≤–¥–æ—Ö, –≤—ã–¥–æ—Ö –∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –∫–æ –º–Ω–µ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫—Éü§ç", main_menu())

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
async def send_message(user_id, message, reply_markup=None):
    await bot.send_message(chat_id=user_id, text=message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    client_id = message.from_user.id
    user_name = message.from_user.full_name
    add_client_to_db(client_id, user_name, 'no_subscription')
    await message.answer_photo(
        IMAGES["main"],
        caption="–ü—Ä–∏–≤–µ—Ç! \n\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –î–∞—à–∞, —è —Ç—Ä–µ–Ω–µ—Ä –ø–æ –π–æ–≥–µ —Å –æ–ø—ã—Ç–æ–º –±–æ–ª–µ–µ 4 –ª–µ—Ç. –ï—Å–ª–∏ —Ç—ã —É—Å—Ç–∞–ª –æ—Ç –±–æ–ª–µ–π –≤ —Å–ø–∏–Ω–µ, —Å—Ç—Ä–µ—Å—Å–∞ –Ω–∞ —Ä–∞–±–æ—Ç–µ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∞ —ç–Ω–µ—Ä–≥–∏–∏, —Ç—ã –ø—Ä–∏—à–µ–ª –ø–æ –∞–¥—Ä–µ—Å—É!\n\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ:\n‚ú® –ò–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –±–æ–ª–µ–π –≤ —Ç–µ–ª–µ –∏ —É–ª—É—á—à–∏—Ç—å –æ—Å–∞–Ω–∫—É\n‚ú® –û–±–µ—Ä–µ—á—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –±–∞–ª–∞–Ω—Å –∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ\n‚ú® –ü–æ–¥–Ω—è—Ç—å —É—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏ –∏ —Å–Ω—è—Ç—å —Å—Ç—Ä–µ—Å—Å, –¥–∞–∂–µ –µ—Å–ª–∏ —É —Ç–µ–±—è –æ—á–µ–Ω—å –ø–ª–æ—Ç–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫.\n\n–í —ç—Ç–æ–º –±–æ—Ç–µ —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –≤—Å–µ –æ –º–æ–∏—Ö –∑–∞–Ω—è—Ç–∏—è—Ö, —Ç–∞—Ä–∏—Ñ–∞—Ö –∏ —É—Å–ª–æ–≤–∏—è—Ö. –ì–æ—Ç–æ–≤ —É–ª—É—á—à–∏—Ç—å —Å–≤–æ–µ —Ç–µ–ª–æ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ? –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!\n\n–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –∏ –¥–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º –ø–µ—Ä–≤—ã–π —à–∞–≥ –∫ –∑–¥–æ—Ä–æ–≤—å—é!",
        reply_markup=main_menu()
    )
    # –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç
    asyncio.create_task(send_delayed_message(client_id, message.chat.id))

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç
async def send_delayed_message(user_id, chat_id):
    await asyncio.sleep(120)  # 5 –º–∏–Ω—É—Ç = 300 —Å–µ–∫—É–Ω–¥
    await send_message(user_id, "–ü—Ä–∏–≤–µ—Ç! üòä\n–Ø –∑–∞–º–µ—Ç–∏–ª–∞, —á—Ç–æ –≤—ã –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∏—Å—å –ø—Ä–∞–∫—Ç–∏–∫–∞–º–∏, –Ω–æ –µ—â—ë –Ω–µ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É. –ï—Å–ª–∏ —É –≤–∞—Å –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è @dariakobrina ‚Äî —è —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–º–æ–≥—É!\n\n–ù–µ –∑–∞–±—É–¥—å—Ç–µ, —á—Ç–æ –ø–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫:\n‚ú® –ü—Ä–∞–∫—Ç–∏–∫–∞–º FYSM –π–æ–≥–∏ –≤ –ø—Ä—è–º–æ–º —ç—Ñ–∏—Ä–µ,\n‚ú® –ö –∑–∞–ø–∏—Å—è–º –ø—Ä–∞–∫—Ç–∏–∫ - –∑–∞–Ω–∏–º–∞–π—Å—è –≤ –ª—é–±–æ–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è,\n‚ú® –ö –≥—Ä—É–ø–ø–µ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –∏ –∫—Ç–æ –≤—Å–µ–≥–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∏—Ç –µ—Å–ª–∏ –ª–µ–Ω—å –≤—Å—Ç–∞–≤–∞—Ç—å –Ω–∞ –∫–æ–≤—Ä–∏–∫.\n\n–ù–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π—Ç–µ —Å–≤–æ—ë –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –ø–æ—Ç–æ–º, —Å–¥–µ–ª–∞–π—Ç–µ –≥–ª—É–±–æ–∫–∏–π –≤–¥–æ—Ö, –≤—ã–¥–æ—Ö –∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –∫–æ –º–Ω–µ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫—Éü§ç", main_menu())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ì–†–£–ü–ü–û–í–´–ï –ü–†–ê–ö–¢–ò–ö–ò"
@dp.callback_query(F.data == "group_practice")
async def group_practice_menu(callback_query: types.CallbackQuery):
    await callback_query.message.edit_media(
        types.InputMediaPhoto(media=IMAGES["group_practice"], caption="ü´Ç–ì—Ä—É–ø–ø–æ–≤—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏\n\n‚ú® –ü—Ä–∞–∫—Ç–∏–∫–∏ –≤ –ø—Ä—è–º—ã—Ö —ç—Ñ–∏—Ä–∞—Ö 2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é. –í–¢–û–†–ù–ò–ö, –ü–Ø–¢–ù–ò–¶–ê 8.00 –ú–°–ö\n\n‚ú® –°—Ä–µ–¥–Ω—è—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∞–∫—Ç–∏–∫–∏ - 60 –º–∏–Ω—É—Ç.\n\n‚ú® –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è –∑–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –∫–∞–Ω–∞–ª–µ. –¢—Ä–µ–Ω–∏—Ä—É–π—Ç–µ—Å—å –≤ –ª—é–±–æ–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è, –≤—ã–±–∏—Ä–∞—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥—Ö–æ–¥–∏—Ç –∏–º–µ–Ω–Ω–æ –≤–∞–º.\n\n‚ú® –ü—Ä–∞–∫—Ç–∏–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª–µ –∏–¥—É—Ç –æ—Ç –ª–µ–≥–∫–∏—Ö –∫ —Å–ª–æ–∂–Ω—ã–º, –ø–æ—ç—Ç–æ–º—É –º–æ–∂–Ω–æ —Å–ø–æ–∫–æ–π–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –¥–∞–∂–µ –µ—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –æ–ø—ã—Ç–∞ –≤ –π–æ–≥–µ."),
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–¢–ê–†–ò–§ –ò –û–ü–õ–ê–¢–ê", callback_data="tariff_group")],
            [InlineKeyboardButton(text="–ù–ê–ó–ê–î", callback_data="main_menu")]
        ])
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–´–ï –ü–†–ê–ö–¢–ò–ö–ò"
@dp.callback_query(F.data == "individual_practice")
async def individual_practice_menu(callback_query: types.CallbackQuery):
    await callback_query.message.edit_media(
        types.InputMediaPhoto(media=IMAGES["individual_practice"], caption="üßòüßòüèª‚Äç‚ôÄÔ∏è–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏\n\n- –í—Ä–µ–º—è –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–Ω—è—Ç–∏–π –ø–æ–¥–±–∏—Ä–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –ø–æ–¥ –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n- –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –æ—Ç 60 –º–∏–Ω—É—Ç\n- –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –ø–æ–¥ –≤–∞—à –∑–∞–ø—Ä–æ—Å –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –ó–∞ —Å—á–µ—Ç —ç—Ç–æ–≥–æ –∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–∞–∫–æ–π –±—ã—Å—Ç—Ä—ã–π —Ä–æ—Å—Ç –≤ –ø—Ä–∞–∫—Ç–∏–∫–µ.\n\nüåû–£–∂–µ —á–µ—Ä–µ–∑ 1-3 –º–µ—Å—è—Ü–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –ø—Ä–∞–∫—Ç–∏–∫ –≤—ã –ø–æ—á—É–≤—Å—Ç–≤—É–µ—Ç–µ:\n- –°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –∏ –±–æ–ª–µ–µ —è—Å–Ω—ã–π —É–º –≤ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω–∏.\n- –£–ª—É—á—à–µ–Ω–∏–µ –æ–±—â–µ–≥–æ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è, —É–º–µ–Ω—å—à–µ–Ω–∏–µ –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç–∞ –≤ —Å–ø–∏–Ω–µ –∏ —Å—É—Å—Ç–∞–≤–∞—Ö.\n- –õ–µ–≥—á–µ —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å —Ä–∞–±–æ—á–∏–º–∏ –∏ –ª–∏—á–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏, –±—ã—Å—Ç—Ä–µ–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è."),
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–¢–ê–†–ò–§ –ò –û–ü–õ–ê–¢–ê", callback_data="tariff_individual")],
            [InlineKeyboardButton(text="–ù–ê–ó–ê–î", callback_data="main_menu")]
        ])
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–†–û–ë–ù–ê–Ø –ü–†–ê–ö–¢–ò–ö–ê"
@dp.callback_query(F.data == "trial_practice")
async def trial_practice_menu(callback_query: types.CallbackQuery):
    await callback_query.message.edit_media(
        types.InputMediaPhoto(media=IMAGES["trial_practice"], caption="–ü–æ–ø—Ä–æ–±–æ–≤–∞–≤, —Ç—ã –Ω–∏—á–µ–≥–æ –Ω–µ —Ç–µ—Ä—è–µ—à—å, –∞ —Ç–æ–ª—å–∫–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–µ—à—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é –∂–∏–∑–Ω—å.\n\n–ü–æ—Å–ª–µ –ø—Ä–æ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –æ —Å–≤–æ–∏—Ö –æ—â—É—â–µ–Ω–∏—è—Ö @dariakobrina.\n\n–ë—É–¥—É —Ç–µ–±–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–∞ü§ç"),
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ü–û–õ–£–ß–ò–¢–¨ –ü–†–û–ë–ù–£–Æ –ü–†–ê–ö–¢–ò–ö–£", url="https://youtu.be/ej-qJBF3jCQ?si=jMRDHDRvSrUZxfod")],
            [InlineKeyboardButton(text="–ù–ê–ó–ê–î", callback_data="main_menu")]
        ])
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–†–ï–ó–£–õ–¨–¢–ê–¢–´ –ò –û–¢–ó–´–í–´"
@dp.callback_query(F.data == "results")
async def results_menu(callback_query: types.CallbackQuery):
    await callback_query.message.edit_media(
        types.InputMediaPhoto(media=IMAGES["results"], caption="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –æ—Ç–∑—ã–≤—ã –º–æ–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤."),
        reply_markup=results_menu_markup()
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    for photo in ADDITIONAL_PHOTOS:
        await callback_query.message.answer_photo(photo=photo)
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–Ω—é —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π –ø–æ—Å–ª–µ –≤—Å–µ—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    await callback_query.message.answer_photo(
        photo=IMAGES["results"],
        caption="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –æ—Ç–∑—ã–≤—ã –º–æ–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤.",
        reply_markup=results_menu_markup()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û–ë–†–ê–¢–ù–ê–Ø –°–í–Ø–ó–¨"
@dp.callback_query(F.data == "feedback")
async def feedback_menu(callback_query: types.CallbackQuery):
    await callback_query.message.edit_media(
        types.InputMediaPhoto(media=IMAGES["feedback"], caption="–ß—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø—Ä–∞–∫—Ç–∏–∫–∞—Ö –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ @dariakobrina."),
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ù–ê–ó–ê–î", callback_data="main_menu")]
        ])
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–¢–ê–†–ò–§ –ò –û–ü–õ–ê–¢–ê" –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö –ø—Ä–∞–∫—Ç–∏–∫
@dp.callback_query(F.data == "tariff_group")
async def tariff_group_menu(callback_query: types.CallbackQuery):
    await callback_query.message.edit_media(
        types.InputMediaPhoto(media=IMAGES["tariff"], caption="–ü—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –Ω—É–∂–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏:\n\n–ü–û–î–ü–ò–°–ö–ê 1 –ú–ï–°–Ø–¶ - 2.450 ‚ÇΩ.\n–ü–û–î–ü–ò–°–ö–ê 3 –ú–ï–°–Ø–¶–ê - 6.835 ‚ÇΩ.\n–ü–û–î–ü–ò–°–ö–ê 6 –ú–ï–°–Ø–¶–ï–í 12.495 ‚ÇΩ.\n\nüí≥ –í—ã –º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –ª—é–±–æ–π –∫–∞—Ä—Ç–æ–π –†–§ –±–∞–Ω–∫–∞ –∏–ª–∏ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ –±–∞–Ω–∫–∞.\n\nüí±–¢–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –æ–ø–ª–∞—Ç–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π (USDT). –£—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã –∫—Ä–∏–ø—Ç–æ–π —Å–º–æ—Ç—Ä–∏—Ç–µ –¥–∞–ª–µ–µ –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–û–ü–õ–ê–¢–ò–¢–¨ –ö–†–ò–ü–¢–û–ô¬ª."),
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–û–ü–õ–ê–¢–ê", callback_data="payment_group")],
            [InlineKeyboardButton(text="–ù–ê–ó–ê–î", callback_data="group_practice")],
            [InlineKeyboardButton(text="–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ", callback_data="main_menu")]
        ])
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û–ü–õ–ê–¢–ò–¢–¨" –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö –ø—Ä–∞–∫—Ç–∏–∫
@dp.callback_query(F.data == "payment_group")
async def payment_group_menu(callback_query: types.CallbackQuery):
    await callback_query.message.edit_media(
        types.InputMediaPhoto(media=IMAGES["tariff"], caption="–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É"),
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ü–û–î–ü–ò–°–ö–ê 1 –ú–ï–°–Ø–¶", url="https://payform.ru/qs5XszQ/")],
            [InlineKeyboardButton(text="–ü–û–î–ü–ò–°–ö–ê 3 –ú–ï–°–Ø–¶–ê", url="https://payform.ru/795VRyo/")],
            [InlineKeyboardButton(text="–ü–û–î–ü–ò–°–ö–ê 6 –ú–ï–°–Ø–¶–ï–í", url="https://payform.ru/9q5VRzJ/")],
            [InlineKeyboardButton(text="–û–ü–õ–ê–¢–ò–¢–¨ –ö–†–ò–ü–¢–û–ô", callback_data="payment_crypto")],
            [InlineKeyboardButton(text="–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ", callback_data="main_menu")]
        ])
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û–ü–õ–ê–¢–ò–¢–¨ –ö–†–ò–ü–¢–û–ô" –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö –ø—Ä–∞–∫—Ç–∏–∫
@dp.callback_query(F.data == "payment_crypto")
async def payment_crypto_menu(callback_query: types.CallbackQuery):
    await callback_query.message.edit_media(
        types.InputMediaPhoto(media=IMAGES["tariff"], caption="–°—Ç–æ–∏–º–æ—Å—Ç—å –≤ USDT:\n\n–ü–û–î–ü–ò–°–ö–ê 1 –ú–ï–°–Ø–¶ - 24$\n–ü–û–î–ü–ò–°–ö–ê 3 –ú–ï–°–Ø–¶–ê - 68$\n–ü–û–î–ü–ò–°–ö–ê 6 –ú–ï–°–Ø–¶–ï–í - 124$\n\n–°–µ—Ç—å - TRC 20\nTMrL9Yk1Mse7yLAbKdqeTC8DztwRhr9Ptk\n\n–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ –∞–¥—Ä–µ—Å–∞ –∫–æ—à–µ–ª—å–∫–∞. –ü–µ—Ä–µ–¥ —Å–æ–≤–µ—Ä—à–µ–Ω–∏–µ–º –æ–ø–ª–∞—Ç—ã —É–±–µ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –∞–¥—Ä–µ—Å–∞.\n\n–ü–æ—Å–ª–µ —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã —Å–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω-—à–æ—Ç —É—Å–ø–µ—à–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω-—à–æ—Ç —É—Å–ø–µ—à–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏."),
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–û–ü–õ–ê–¢–ò–õ(–ê) - –û–¢–ü–†–ê–í–ò–¢–¨ –°–ö–†–ò–ù", url="https://t.me/dariakobrina")],
            [InlineKeyboardButton(text="–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ", callback_data="main_menu")]
        ])
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–¢–ê–†–ò–§ –ò –û–ü–õ–ê–¢–ê" –¥–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –ø—Ä–∞–∫—Ç–∏–∫
@dp.callback_query(F.data == "tariff_individual")
async def tariff_individual_menu(callback_query: types.CallbackQuery):
    await callback_query.message.edit_media(
        types.InputMediaPhoto(media=IMAGES["tariff"], caption="üí≤–ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:\n\n–û–¥–Ω–æ –∑–∞–Ω—è—Ç–∏–µ - 3.000‚ÇΩ.\n–ê–±–æ–Ω–µ–º–µ–Ω—Ç –Ω–∞ –º–µ—Å—è—Ü (8 –ø—Ä–∞–∫—Ç–∏–∫) - 24.000 ‚ÇΩ.\n\nüí±Crypto (USDT)\n\n–û–¥–Ω–æ –∑–∞–Ω—è—Ç–∏–µ - 30$\n–ê–±–æ–Ω–µ–º–µ–Ω—Ç –Ω–∞ –º–µ—Å—è—Ü (8 –ø—Ä–∞–∫—Ç–∏–∫) - 240$\n\nüí≥ –í—ã –º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –ª—é–±–æ–π –∫–∞—Ä—Ç–æ–π –†–§ –±–∞–Ω–∫–∞.\n\nüí±–¢–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –æ–ø–ª–∞—Ç–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π (USDT).\n\n–ß—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é –ø—Ä–∞–∫—Ç–∏–∫—É –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ó–ê–ü–ò–°–ê–¢–¨–°–Ø –ù–ê –ü–†–ê–ö–¢–ò–ö–£¬ª –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ."),
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ó–ê–ü–ò–°–ê–¢–¨–°–Ø –ù–ê –ü–†–ê–ö–¢–ò–ö–£", url="https://t.me/dariakobrina")],
            [InlineKeyboardButton(text="–ù–ê–ó–ê–î", callback_data="individual_practice")],
            [InlineKeyboardButton(text="–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ", callback_data="main_menu")]
        ])
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–ê–ó–ê–î"
@dp.callback_query(F.data == "main_menu")
async def main_menu_handler(callback_query: types.CallbackQuery):
    await callback_query.message.edit_media(
        types.InputMediaPhoto(media=IMAGES["main"], caption="–ü—Ä–∏–≤–µ—Ç! \n\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –î–∞—à–∞, —è —Ç—Ä–µ–Ω–µ—Ä –ø–æ –π–æ–≥–µ —Å –æ–ø—ã—Ç–æ–º –±–æ–ª–µ–µ 4 –ª–µ—Ç. –ï—Å–ª–∏ —Ç—ã —É—Å—Ç–∞–ª –æ—Ç –±–æ–ª–µ–π –≤ —Å–ø–∏–Ω–µ, —Å—Ç—Ä–µ—Å—Å–∞ –Ω–∞ —Ä–∞–±–æ—Ç–µ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∞ —ç–Ω–µ—Ä–≥–∏–∏, —Ç—ã –ø—Ä–∏—à–µ–ª –ø–æ –∞–¥—Ä–µ—Å—É!\n\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ:\n‚ú® –ò–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –±–æ–ª–µ–π –≤ —Ç–µ–ª–µ –∏ —É–ª—É—á—à–∏—Ç—å –æ—Å–∞–Ω–∫—É\n‚ú® –û–±–µ—Ä–µ—á—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –±–∞–ª–∞–Ω—Å –∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ\n‚ú® –ü–æ–¥–Ω—è—Ç—å —É—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏ –∏ —Å–Ω—è—Ç—å —Å—Ç—Ä–µ—Å—Å, –¥–∞–∂–µ –µ—Å–ª–∏ —É —Ç–µ–±—è –æ—á–µ–Ω—å –ø–ª–æ—Ç–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫.\n\n–í —ç—Ç–æ–º –±–æ—Ç–µ —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –≤—Å–µ –æ –º–æ–∏—Ö –∑–∞–Ω—è—Ç–∏—è—Ö, —Ç–∞—Ä–∏—Ñ–∞—Ö –∏ —É—Å–ª–æ–≤–∏—è—Ö. –ì–æ—Ç–æ–≤ —É–ª—É—á—à–∏—Ç—å —Å–≤–æ–µ —Ç–µ–ª–æ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ? –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!\n\n–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –∏ –¥–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º –ø–µ—Ä–≤—ã–π —à–∞–≥ –∫ –∑–¥–æ—Ä–æ–≤—å—é!"),
        reply_markup=main_menu()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–û–î–ü–ò–°–ö–ê 1 –ú–ï–°–Ø–¶"
@dp.callback_query(F.data == "subscription_1_month")
async def subscription_1_month_handler(callback_query: types.CallbackQuery):
    client_id = callback_query.from_user.id
    process_purchase(client_id, 30)  # –£–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –ø–æ–¥–ø–∏—Å–∫–∏
    await callback_query.message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 1 –º–µ—Å—è—Ü –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–û–î–ü–ò–°–ö–ê 3 –ú–ï–°–Ø–¶–ê"
@dp.callback_query(F.data == "subscription_3_months")
async def subscription_3_months_handler(callback_query: types.CallbackQuery):
    client_id = callback_query.from_user.id
    process_purchase(client_id, 90)  # –£–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –ø–æ–¥–ø–∏—Å–∫–∏
    await callback_query.message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 3 –º–µ—Å—è—Ü–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–û–î–ü–ò–°–ö–ê 6 –ú–ï–°–Ø–¶–ï–í"
@dp.callback_query(F.data == "subscription_6_months")
async def subscription_6_months_handler(callback_query: types.CallbackQuery):
    client_id = callback_query.from_user.id
    process_purchase(client_id, 180)  # –£–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –ø–æ–¥–ø–∏—Å–∫–∏
    await callback_query.message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 6 –º–µ—Å—è—Ü–µ–≤ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.")

# –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á Prodamus
PRODAMUS_SECRET_KEY = "37bc20c9d78758f336c5777b955ece74733e7fc31d42132c965d92f7f78c6f51"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç Prodamus
def verify_prodamus_signature(data, signature):
    expected_signature = hmac.new(PRODAMUS_SECRET_KEY.encode(), data.encode(), hashlib.sha256).hexdigest()
    return hmac.compare_digest(expected_signature, signature)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç Prodamus
async def handle_prodamus_webhook(request):
    data = await request.text()
    signature = request.headers.get('X-Signature')

    if not verify_prodamus_signature(data, signature):
        return web.Response(status=403)

    payload = json.loads(data)
    user_id = payload['user_id']
    subscription_duration = payload['subscription_duration']

    process_purchase(user_id, subscription_duration)
    await send_subscription_message(user_id, subscription_duration)

    return web.Response(status=200)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ
async def send_subscription_message(user_id, subscription_duration):
    if subscription_duration == 30:
        message = "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 1 –º–µ—Å—è—Ü –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞."
    elif subscription_duration == 90:
        message = "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 3 –º–µ—Å—è—Ü–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞."
    elif subscription_duration == 180:
        message = "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 6 –º–µ—Å—è—Ü–µ–≤ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞."
    else:
        message = "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞."

    await bot.send_message(chat_id=user_id, text=message)

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    dp.startup.register(lambda: print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω"))
    dp.message.register(send_welcome)
    dp.callback_query.register(group_practice_menu, F.data == "group_practice")
    dp.callback_query.register(individual_practice_menu, F.data == "individual_practice")
    dp.callback_query.register(trial_practice_menu, F.data == "trial_practice")
    dp.callback_query.register(results_menu, F.data == "results")
    dp.callback_query.register(feedback_menu, F.data == "feedback")
    dp.callback_query.register(tariff_group_menu, F.data == "tariff_group")
    dp.callback_query.register(payment_group_menu, F.data == "payment_group")
    dp.callback_query.register(tariff_individual_menu, F.data == "tariff_individual")
    dp.callback_query.register(main_menu_handler, F.data == "main_menu")
    dp.callback_query.register(subscription_1_month_handler, F.data == "subscription_1_month")
    dp.callback_query.register(subscription_3_months_handler, F.data == "subscription_3_months")
    dp.callback_query.register(subscription_6_months_handler, F.data == "subscription_6_months")

    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
async def check_subscriptions_and_send_reminders():
    while True:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞
        check_subscriptions()

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∫–ª–∏–µ–Ω—Ç–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø—É—Å—Ç–∏–ª–∏ –±–æ—Ç–∞, –Ω–æ –Ω–µ —Å–¥–µ–ª–∞–ª–∏ –ø–æ–∫—É–ø–∫—É
        for client in clients_collection.find({'subscription_status': 'no_subscription'}):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—è 'user_id'
            if 'user_id' in client:
                # –£—Å–ª–æ–≤–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç
                if not client.get('reminder_sent', False):  # –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –µ—â–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
                    if client['last_reminder'] is None or client['last_reminder'] <= time.time() - 2 * 60:
                        await send_reminder(client['user_id'])

                        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
                        clients_collection.update_one(
                            {'user_id': client['user_id']},
                            {
                                '$set': {
                                    'last_reminder': time.time(),
                                    'reminder_sent': True  # –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
                                }
                            }
                        )
            else:
                print(f"–û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ 'user_id' –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ: {client}")

        # –û–∂–∏–¥–∞–Ω–∏–µ 5 –º–∏–Ω—É—Ç –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
        await asyncio.sleep(2 * 60)

if __name__ == "__main__":
    app = web.Application()
    app.router.add_post('/prodamus_webhook', handle_prodamus_webhook)

    web.run_app(app, port=8080)
    asyncio.run(main())
    asyncio.run(check_subscriptions_and_send_reminders())
